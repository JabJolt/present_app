--
-- File generated with SQLiteStudio v3.1.1 on Вс дек 31 18:33:08 2017
--
-- Text encoding used: System
--
PRAGMA foreign_keys = off;
BEGIN TRANSACTION;

-- Table: DIM_CURRENCY
DROP TABLE IF EXISTS DIM_CURRENCY;
CREATE TABLE DIM_CURRENCY (CURRENCY_ID INTEGER PRIMARY KEY, CURRENCY_CODE CHAR (3) NOT NULL, DESCRIPTION VARCHAR (500));

-- Table: DIM_PERSON_CATEGORY
DROP TABLE IF EXISTS DIM_PERSON_CATEGORY;
CREATE TABLE DIM_PERSON_CATEGORY (CATEGORY_ID INTEGER PRIMARY KEY, CATEGORY_NAME VARCHAR (100) NOT NULL, DESCRIPTION VARCHAR (500));

-- Table: EVENT
DROP TABLE IF EXISTS EVENT;
CREATE TABLE EVENT (EVENT_ID INTEGER PRIMARY KEY, EVENT_NAME VARCHAR (100) NOT NULL, EVENT_DATE DATE NOT NULL, DESCRIPTION VARCHAR (500), PERSON_ID INTEGER REFERENCES PERSON (PERSON_ID));

-- Table: GIFT
DROP TABLE IF EXISTS GIFT;
CREATE TABLE GIFT (GIFT_ID INTEGER PRIMARY KEY, GIFT_NAME VARCHAR (100) NOT NULL, PRICE DOUBLE (10, 2), IS_GOT INT NOT NULL, IS_GIVEN INT NOT NULL, DESCRIPTION VARCHAR (500), CURRENCY_ID INTEGER REFERENCES DIM_CURRENCY (CURRENCY_ID) NOT NULL, PERSON_ID INTEGER REFERENCES PERSON (PERSON_ID), EVENT_ID INTEGER REFERENCES EVENT (EVENT_ID), DTTM DATE NOT NULL);

-- Table: GIVING
DROP TABLE IF EXISTS GIVING;
CREATE TABLE GIVING (GIVING_ID INTEGER PRIMARY KEY, GIFT_ID INTEGER NOT NULL REFERENCES GIFT (GIFT_ID), PERSON_TO INTEGER REFERENCES PERSON (PERSON_ID), PERSON_FROM INTEGER REFERENCES PERSON (PERSON_ID) NOT NULL, REACTION VARCHAR (500), DTTM DATE NOT NULL);

-- Table: PERIOD
DROP TABLE IF EXISTS PERIOD;
CREATE TABLE PERIOD (PERIOD_ID INTEGER PRIMARY KEY, DATE_FROM DATE NOT NULL, DATE_TO DATE NOT NULL, EVENT_ID INTEGER REFERENCES EVENT (EVENT_ID), DESCRIPTION VARCHAR (500));

-- Table: PERSON
DROP TABLE IF EXISTS PERSON;
CREATE TABLE PERSON (PERSON_ID INTEGER PRIMARY KEY, NAME VARCHAR (200) NOT NULL, DESCRIPTION VARCHAR (500), DTTM DATE, CATEGORY_ID INTEGER REFERENCES DIM_PERSON_CATEGORY (CATEGORY_ID));

-- Index: IDX_GIFT_ID
DROP INDEX IF EXISTS IDX_GIFT_ID;
CREATE UNIQUE INDEX IDX_GIFT_ID ON GIFT (GIFT_ID ASC);

-- Index: IDX_GIVING_ID
DROP INDEX IF EXISTS IDX_GIVING_ID;
CREATE UNIQUE INDEX IDX_GIVING_ID ON GIVING (GIVING_ID ASC);

-- Trigger: TRG_INS_GIFT
DROP TRIGGER IF EXISTS TRG_INS_GIFT;
CREATE TRIGGER TRG_INS_GIFT AFTER INSERT ON GIFT FOR EACH ROW BEGIN UPDATE GIFT SET DTTM = (datetime('now')) WHERE GIFT_ID = new.GIFT_ID; END;

-- Trigger: TRG_INS_GIVING
DROP TRIGGER IF EXISTS TRG_INS_GIVING;
CREATE TRIGGER TRG_INS_GIVING AFTER INSERT ON GIVING FOR EACH ROW BEGIN UPDATE GIVING SET DTTM = (datetime('now')) WHERE GIVING_ID = new.GIVING_ID; END;

-- Trigger: TRG_INS_PERSON
DROP TRIGGER IF EXISTS TRG_INS_PERSON;
CREATE TRIGGER TRG_INS_PERSON AFTER INSERT ON PERSON FOR EACH ROW BEGIN UPDATE PERSON SET DTTM = (DATETIME('NOW')) WHERE PERSON_ID = new.PERSON_ID; END;

-- View: V_ACT_PERIOD
DROP VIEW IF EXISTS V_ACT_PERIOD;
CREATE VIEW V_ACT_PERIOD as
select * from PERIOD 
    where strftime('%Y/%m/%d',DATETIME('NOW')) between DATE_FROM and DATE_TO;

COMMIT TRANSACTION;
PRAGMA foreign_keys = on;
